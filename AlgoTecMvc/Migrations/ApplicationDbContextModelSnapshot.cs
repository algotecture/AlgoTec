// <auto-generated />
using System;
using AlgoTecMvc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlgoTecMvc.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("AlgoTecMvc.Models.Entities.TypeOfSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TypeOfSpaces");
                });

            modelBuilder.Entity("AlgoTecMvc.Models.RepositoryModels.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ContractDateStart")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ContractDateStop")
                        .HasColumnType("TEXT");

                    b.Property<long>("OwnerUserId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SpaceId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SpacePropertyId")
                        .HasColumnType("TEXT");

                    b.Property<long>("TenantUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("SpaceId");

                    b.HasIndex("TenantUserId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("AlgoTecMvc.Models.RepositoryModels.Space", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpaceProperty")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeOfSpaceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfSpaceId");

                    b.ToTable("Spaces");
                });

            modelBuilder.Entity("AlgoTecMvc.Models.RepositoryModels.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AlgoTecMvc.Models.RepositoryModels.Contract", b =>
                {
                    b.HasOne("AlgoTecMvc.Models.RepositoryModels.User", "OwnerUser")
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlgoTecMvc.Models.RepositoryModels.Space", "Space")
                        .WithMany()
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlgoTecMvc.Models.RepositoryModels.User", "TenantUser")
                        .WithMany()
                        .HasForeignKey("TenantUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnerUser");

                    b.Navigation("Space");

                    b.Navigation("TenantUser");
                });

            modelBuilder.Entity("AlgoTecMvc.Models.RepositoryModels.Space", b =>
                {
                    b.HasOne("AlgoTecMvc.Models.Entities.TypeOfSpace", "TypeOfSpace")
                        .WithMany()
                        .HasForeignKey("TypeOfSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfSpace");
                });
#pragma warning restore 612, 618
        }
    }
}
